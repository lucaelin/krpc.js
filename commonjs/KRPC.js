"use strict";var e=require("ws"),t=require("lodash-es"),r=require("protobufjs"),s=require("buffer");function i(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=i(e),n=i(r),o={nested:{krpc:{nested:{schema:{options:{csharp_namespace:"KRPC.Schema.KRPC",java_package:"krpc.schema",java_outer_classname:"KRPC",objc_class_prefix:"KRPC"},nested:{ConnectionRequest:{fields:{type:{type:"Type",id:1},clientName:{type:"string",id:2},clientIdentifier:{type:"bytes",id:3}},nested:{Type:{values:{RPC:0,STREAM:1}}}},ConnectionResponse:{fields:{status:{type:"Status",id:1},message:{type:"string",id:2},clientIdentifier:{type:"bytes",id:3}},nested:{Status:{values:{OK:0,MALFORMED_MESSAGE:1,TIMEOUT:2,WRONG_TYPE:3}}}},Request:{fields:{calls:{rule:"repeated",type:"ProcedureCall",id:1}}},ProcedureCall:{fields:{service:{type:"string",id:1},procedure:{type:"string",id:2},serviceId:{type:"uint32",id:4},procedureId:{type:"uint32",id:5},arguments:{rule:"repeated",type:"Argument",id:3}}},Argument:{fields:{position:{type:"uint32",id:1},value:{type:"bytes",id:2}}},Response:{fields:{error:{type:"Error",id:1},results:{rule:"repeated",type:"ProcedureResult",id:2}}},ProcedureResult:{fields:{error:{type:"Error",id:1},value:{type:"bytes",id:2}}},Error:{fields:{service:{type:"string",id:1},name:{type:"string",id:2},description:{type:"string",id:3},stackTrace:{type:"string",id:4}}},StreamUpdate:{fields:{results:{rule:"repeated",type:"StreamResult",id:1}}},StreamResult:{fields:{id:{type:"uint64",id:1},result:{type:"ProcedureResult",id:2}}},Services:{fields:{services:{rule:"repeated",type:"Service",id:1}}},Service:{fields:{name:{type:"string",id:1},procedures:{rule:"repeated",type:"Procedure",id:2},classes:{rule:"repeated",type:"Class",id:3},enumerations:{rule:"repeated",type:"Enumeration",id:4},exceptions:{rule:"repeated",type:"Exception",id:5},documentation:{type:"string",id:6}}},Procedure:{fields:{name:{type:"string",id:1},parameters:{rule:"repeated",type:"Parameter",id:2},returnType:{type:"Type",id:3},returnIsNullable:{type:"bool",id:4},gameScenes:{rule:"repeated",type:"GameScene",id:6},documentation:{type:"string",id:5}},nested:{GameScene:{values:{SPACE_CENTER:0,FLIGHT:1,TRACKING_STATION:2,EDITOR_VAB:3,EDITOR_SPH:4,MISSION_BUILDER:5}}}},Parameter:{fields:{name:{type:"string",id:1},type:{type:"Type",id:2},defaultValue:{type:"bytes",id:3}}},Class:{fields:{name:{type:"string",id:1},documentation:{type:"string",id:2}}},Enumeration:{fields:{name:{type:"string",id:1},values:{rule:"repeated",type:"EnumerationValue",id:2},documentation:{type:"string",id:3}}},EnumerationValue:{fields:{name:{type:"string",id:1},value:{type:"int32",id:2},documentation:{type:"string",id:3}}},Exception:{fields:{name:{type:"string",id:1},documentation:{type:"string",id:2}}},Type:{fields:{code:{type:"TypeCode",id:1},service:{type:"string",id:2},name:{type:"string",id:3},types:{rule:"repeated",type:"Type",id:4}},nested:{TypeCode:{values:{NONE:0,DOUBLE:1,FLOAT:2,SINT32:3,SINT64:4,UINT32:5,UINT64:6,BOOL:7,STRING:8,BYTES:9,CLASS:100,ENUMERATION:101,EVENT:200,PROCEDURE_CALL:201,STREAM:202,STATUS:203,SERVICES:204,TUPLE:300,LIST:301,SET:302,DICTIONARY:303}}}},Tuple:{fields:{items:{rule:"repeated",type:"bytes",id:1}}},List:{fields:{items:{rule:"repeated",type:"bytes",id:1}}},Set:{fields:{items:{rule:"repeated",type:"bytes",id:1}}},Dictionary:{fields:{entries:{rule:"repeated",type:"DictionaryEntry",id:1}}},DictionaryEntry:{fields:{key:{type:"bytes",id:1},value:{type:"bytes",id:2}}},Stream:{fields:{id:{type:"uint64",id:1}}},Event:{fields:{stream:{type:"Stream",id:1}}},Status:{fields:{version:{type:"string",id:1},bytesRead:{type:"uint64",id:2},bytesWritten:{type:"uint64",id:3},bytesReadRate:{type:"float",id:4},bytesWrittenRate:{type:"float",id:5},rpcsExecuted:{type:"uint64",id:6},rpcRate:{type:"float",id:7},oneRpcPerUpdate:{type:"bool",id:8},maxTimePerUpdate:{type:"uint32",id:9},adaptiveRateControl:{type:"bool",id:10},blockingRecv:{type:"bool",id:11},recvTimeout:{type:"uint32",id:12},timePerRpcUpdate:{type:"float",id:13},pollTimePerRpcUpdate:{type:"float",id:14},execTimePerRpcUpdate:{type:"float",id:15},streamRpcs:{type:"uint32",id:16},streamRpcsExecuted:{type:"uint64",id:17},streamRpcRate:{type:"float",id:18},timePerStreamUpdate:{type:"float",id:19}}},MultiplexedRequest:{fields:{connectionRequest:{type:"ConnectionRequest",id:1},request:{type:"Request",id:2}}},MultiplexedResponse:{fields:{response:{type:"Response",id:1},streamUpdate:{type:"StreamUpdate",id:2}}}}}}}}};let c=null;const d={load:async function(){c=n.default.Root.fromJSON(o).lookup("krpc").nested.schema,Object.keys(c).forEach((function(e){d[e]=c[e]}))},root:function(){return c}};const l={return:u,double:e=>p("double",e),float:e=>p("float",e),sInt32:e=>p("sint32",e),sInt64:e=>p("sint64",e),uInt32:e=>p("uint32",e),uInt64:e=>p("uint64",e),bool:e=>p("bool",e),string:e=>p("string",e),bytes:e=>p("bytes",e),class:h,enum:m,tuple:v,list:f,set:S,dictionary:y,0:()=>null,1:e=>p("double",e),2:e=>p("float",e),3:e=>p("sint32",e),4:e=>p("sint64",e),5:e=>p("uint32",e),6:e=>p("uint64",e),7:e=>p("bool",e),8:e=>p("string",e),9:e=>p("bytes",e),100:h,101:m,200:function(e,t,r){return e=d.Event.decode(e),r.getService("KRPC")._streamEvent(e.stream)},201:e=>d.ProcedureCall.decode(e),202:e=>d.Stream.decode(e),203:e=>d.Status.decode(e),204:e=>d.Services.decode(e),300:v,301:f,302:S,303:y};function u(e,t,r){if(void 0!==e&&t)return l[t.code](e,t,r)}function p(e,t){return n.default.Reader.create(t)[e]()}function m(e,t,r){return e=l.sInt32(e),r.getEnum(t.service,t.name).values[e]}function h(e,t,r){if(0===(e=l.uInt64(e)))return;let s=r.getClass(t.service,t.name),i=s.Instances[e];return i||new s(e)}function y(e,t,r){e=d.Dictionary.decode(e).entries;let s={};for(let i of e){s[l.return(i.key,t.types[0],r)]=l.return(i.value,t.types[1],r)}return s}function f(e,t,r){return(e=d.List.decode(e).items).map((e=>l.return(e,t.types[0],r)))}function S(e,t,r){return(e=d.Set.decode(e).items).map((e=>l.return(e,t.types[0],r)))}function v(e,t,r){return(e=d.Tuple.decode(e).items).map(((e,s)=>l.return(e,t.types[s],r)))}const g={argument:E,double:e=>b("double",e),float:e=>b("float",e),sInt32:e=>b("sint32",e),sInt64:e=>b("sint64",e),uInt32:e=>b("uint32",e),uInt64:e=>b("uint64",e),bool:e=>b("bool",e),string:e=>b("string",e),bytes:e=>b("bytes",e),class:R,enum:k,tuple:w,list:_,set:P,dictionary:C,0:()=>null,1:e=>b("double",e),2:e=>b("float",e),3:e=>b("sint32",e),4:e=>b("sint64",e),5:e=>b("uint32",e),6:e=>b("uint64",e),7:e=>b("bool",e),8:e=>b("string",e),9:e=>b("bytes",e),100:R,101:k,200:e=>d.Event.encode(e).finish(),201:e=>d.ProcedureCall.encode(e).finish(),202:e=>d.Stream.encode(e).finish(),203:e=>d.Status.encode(e).finish(),204:e=>d.Services.encode(e).finish(),300:w,301:_,302:P,303:C};function E(e,t,r){if(void 0===e){if(t.defaultValue)return s.Buffer.from(t.defaultValue,"base64");throw new Error("Missing argument")}return g[t.type.code](e,t,r)}function b(e,t){return n.default.Writer.create()[e](t).finish()}function k(e,t,r){let s=r.getEnum(t.type.service,t.type.name);if("string"==typeof e)e=s.names[e];else if("number"!=typeof e)throw new Error("Enum value '"+e+"' not of any compatible type");if(void 0===e)throw new Error("Unable to encode enum, no value found");return g.sInt32(e)}function R(e){return g.uInt64(e.id)}function C(e,t,r){let s=[];for(let i in e){let a=g.argument(i,{type:t.type.types[0]},r),n=g.argument(e[i],{type:t.type.types[1]},r);s.push({key:a,value:n})}return s=s.map((e=>d.DictionaryEntry.create(e))),d.Dictionary.encode({entries:s})}function _(e,t,r){let s=e.map((e=>g.argument(e,{type:t.type.types[0]},r)));return d.List.encode({items:s})}function P(e,t,r){let s=e.map((e=>g.argument(e,{type:t.type.types[0]},r)));return d.Set.encode({items:s})}function w(e,t,r){let s=t.type.types.map(((t,s)=>g.argument(e[s],{type:t},r)));return d.Tuple.encode({items:s})}const T=[];function O(e,t,r){return r=r.map(((e,t)=>d.Argument.create({position:t,value:e}))),d.ProcedureCall.create({service:e,procedure:t,arguments:r})}class I{static getService(e){return T[e]}static getException(e,t){return I.getService(e).exceptions[t]}static getEnum(e,t){return I.getService(e).enums[t]}static getClass(e,t){return I.getService(e).classes[t]}static getCall(e,t){return I.getService(e).calls[t]}static getProcedure(e,t){return I.getService(e).procedures[t]}constructor(e,t,r,s){this.name=e.name,this.documentation=e.documentation,this._sendCall=t,this._streamCall=r,this._streamEvent=s,this._streamCache={},T[this.name]=this,this.exceptions={},e.exceptions.forEach((e=>this._addException(e))),this.enums={},e.enumerations.forEach((e=>this._addEnum(e))),this.classes={},e.classes.forEach((e=>this._addClass(e))),this.calls={},this.procedures={},e.procedures.forEach((e=>this._addProcedure(e))),Object.values(this.classes).forEach((e=>this._addClassProperties(e))),this._addServiceProperties()}stream(e,t){let r=this._streams[e](this);return this._streamCall(r,(r=>{this._streamCache[e]=r,"function"==typeof t&&t(r)}),(()=>{delete this._streamCache[e]}))}_addProperties(e,r,s,i){let a={};r.forEach((e=>{let t=e.split("_").pop();a[t]=e}));let n={};s.forEach((e=>{let t=e.split("_").pop();n[t]=n[t]||{},n[t].get=e})),i.forEach((e=>{let t=e.split("_").pop();n[t]=n[t]||{},n[t].set=e})),Object.keys(a).forEach((r=>{let s=a[r],i=this.procedures[s];e[t.camelCase(r)]=async function(...e){return this instanceof I?i(...e):await i(this,...e)}})),Object.keys(n).forEach((r=>{let{get:s,set:i}=n[r],a={};if(s){let i=this.procedures[s];e._streams[t.camelCase(r)]=this.calls[s],a.get=function(){return void 0!==this._streamCache[t.camelCase(r)]?Promise.resolve(this._streamCache[t.camelCase(r)]):this instanceof I?i():i(this)}}if(i){let e=this.procedures[i];a.set=function(t){return this instanceof I?e(t):e(this,t)}}Object.defineProperty(e,t.camelCase(r),a)}))}_addStatics(e,t){let r={};t.forEach((e=>{let t=e.split("_").pop();r[t]=e})),Object.keys(r).forEach((t=>{let s=r[t],i=this.procedures[s];e[t]=function(...e){return i(...e)}}))}_addClass(e){let t=this._streamCall;this.classes[e.name]=class e{constructor(t){if(e.Instances[t])return e.Instances[t];e.Instances[t]=this,this.id=t,this.className=e.Name,this.classDocumentation=e.Documentation,this._streamCache={}}stream(e,r){let s=this._streams[e](this);return t(s,(t=>{this._streamCache[e]=t,"function"==typeof r&&r(t)}),(()=>{delete this._streamCache[e]}))}},this.classes[e.name].Name=e.name,this.classes[e.name].Documentation=e.documentation,this.classes[e.name].Instances=[],this[e.name]=this.classes[e.name]}_addClassProperties(e){let t=Object.keys(this.procedures).filter((t=>0===t.indexOf(e.Name)&&-1===t.indexOf("_get_")&&-1===t.indexOf("_set_")&&-1===t.indexOf("_static_"))),r=Object.keys(this.procedures).filter((t=>0===t.indexOf(e.Name+"_get_"))),s=Object.keys(this.procedures).filter((t=>0===t.indexOf(e.Name+"_set_"))),i=Object.keys(this.procedures).filter((t=>0===t.indexOf(e.Name+"_static_")));e.prototype._streams={},this._addProperties(e.prototype,t,r,s),this._addStatics(e,i)}_addServiceProperties(){let e=Object.keys(this.procedures).filter((e=>-1===e.indexOf("_"))),t=Object.keys(this.procedures).filter((e=>0===e.indexOf("get_"))),r=Object.keys(this.procedures).filter((e=>0===e.indexOf("set_")));this._streams={},this._addProperties(this,e,t,r)}_addEnum(e){let t={},r={},s={},i={};e.values.forEach(((e,a)=>{void 0!==e.value?(t[e.name]=e.value,r[e.value]=e.name,s[e.name]=e.value):(t[e.name]=a,r[a]=e.name,s[e.name]=a),i[e.name]=e.documentation})),s.names=t,s.values=r,s.documentations=i,s.name=e.name,s.documentation=e.documentation,this.enums[e.name]=s,this[e.name]=s}_addException(e){this.exceptions[e.name]=function(){this.name=e.name,this.message=e.documentation},this.exceptions[e.name].prototype=Error.prototype,this[e.name]=this.exceptions[e.name]}_addProcedure(e){this.calls[e.name]=(...t)=>{let r=[];return e.parameters.forEach(((e,s)=>{r[s]=E(t[s],e,I)})),{call:O(this.name,e.name,r),decode:t=>u(t,e.returnType,I)}},this.procedures[e.name]=(...t)=>this._sendCall(this.calls[e.name](...t)).then((e=>{if(e.error||e.results[0].error)throw e.error||e.results[0].error;return e.results[0].value})),this.procedures[e.name].documentation=e.documentation}}function x(e,t,r){return r=r.map(((e,t)=>d.Argument.create({position:t,value:e}))),d.ProcedureCall.create({service:e,procedure:t,arguments:r})}function j(){return{call:x("KRPC","GetClientID",[]),decode:e=>l.bytes(e)}}function N(){return{call:x("KRPC","GetServices",[]),decode:e=>d.Services.decode(e)}}function L(e,t){return{call:x("KRPC","SetStreamRate",[g.uInt64(e),g.float(t)]),decode:null}}function M(e){return{call:x("KRPC","RemoveStream",[g.uInt64(e)]),decode:null}}var A=Object.freeze({__proto__:null,getClientId:j,getStatus:function(){return{call:x("KRPC","GetStatus",[]),decode:e=>d.Status.decode(e)}},getServices:N,addStream:function(e){return{call:x("KRPC","AddStream",[{buffer:d.ProcedureCall.encode(e).finish()}]),decode:e=>d.Stream.decode(e)}},setStreamRate:L,removeStream:M,getClients:function(){return{call:x("KRPC","get_Clients",[]),decode:e=>d.List.decode(e).items.map((e=>((e=d.Tuple.decode(e).items)[0]=l.bytes(e[0]),e[1]=l.string(e[1]),e[2]=l.string(e[2]),e)))}},getCurrentGameScene:function(){return{call:x("KRPC","get_CurrentGameScene",[]),decode:e=>({0:"SpaceCenter",1:"Flight",2:"TrackingStation",3:"EditorVAB",4:"EditorSPH"}[e=l.sInt32(e)])}}});const D={name:"krpc.js",host:"127.0.0.1",rpcPort:5e4,streamPort:50001,streamRate:0,wsOptions:{},wsProtocols:[]};module.exports=class{constructor(e){this.options={...D,...e},this.callbackStack=[],this.decodeStack=[],this.rpcSocket=null,this.streamSocket=null,this.services={krpcLegacy:A},this.streams={}}async load(){return await d.load(),await this.connectToRPCServer(),await this.connectToStreamServer(),await this.createServices(),this}close(){for(this.rpcSocket.close(),this.streamSocket&&this.streamSocket.close();this.callbackStack.length;)this.callbackStack.pop().reject("Connection closed.");this.decodeStack=[],this.streams={}}connectToRPCServer(){return new Promise(((e,t)=>{const r="ws://"+this.options.host+":"+this.options.rpcPort.toString()+"?name="+this.options.name;this.rpcSocket=new a.default(r,this.options.wsProtocols,this.options.wsOptions),this.rpcSocket.binaryType="arraybuffer",this.rpcSocket.addEventListener("error",(e=>console.error("TODO: rpc connection error:",e))),this.rpcSocket.addEventListener("close",(e=>{t(),this.close(),console.error("RPC connection close:",e.reason)})),this.rpcSocket.addEventListener("message",(e=>{try{this.onMessage(e.data)}catch(e){this.onMessageError(e),t(e)}})),this.rpcSocket.addEventListener("open",(async()=>{const t=await this.send(j());this.clientId=t.results[0].value.toString("base64"),e(this.clientId)}),{once:!0})}))}connectToStreamServer(){return new Promise(((e,t)=>{const r="ws://"+this.options.host+":"+this.options.streamPort.toString()+"?id="+this.clientId;this.streamSocket=new a.default(r,this.options.wsProtocols,this.options.wsOptions),this.streamSocket.binaryType="arraybuffer",this.streamSocket.addEventListener("error",(e=>console.error("TODO: stream connection error:",e))),this.streamSocket.addEventListener("close",(e=>console.error("TODO: stream connection close:",e))),this.streamSocket.addEventListener("message",(e=>{try{this.onStreamMessage(e.data)}catch(e){t(),console.error("Unexpected exception processing Stream-Message:",e)}})),this.streamSocket.addEventListener("open",e,{once:!0})}))}async createServices(){(await this.send(N())).results[0].value.services.map((e=>new I(e,(e=>this.send(e)),((e,t,r)=>this.addStream(e,t,r)),(e=>this.addEvent(e))))).forEach((e=>{this.services[t.camelCase(e.name)]=e}))}decodeMessage(e,t){e=s.Buffer.from(e);try{return t.decode(e)}catch(t){let r;try{r=d.Error.decode(e)}catch(s){try{r=e.toString("utf-8")}catch(e){r="Error parsing binary data :"+e.message,r=t.message+"\n"+r+"\n"+t.decoded}}return console.error(t,r),this.onMessageError(r)}}onMessage(e){const t=this.decodeMessage(e,d.Response);if(t){if(t.error)return this.onMessageError(t.error);if(t.results.forEach((e=>{const t=this.decodeStack.pop();if(void 0===t)throw new Error("Decode stack misalignment!");e.error||"function"!=typeof t||(e.value=t(s.Buffer.from(e.value)))})),this.callbackStack.length>0){return this.callbackStack.pop().resolve(t)}}}onMessageError(e){if(console.error("Message Error",e),this.decodeStack.pop(),this.callbackStack.length>0){return this.callbackStack.pop().reject(e)}}onStreamMessage(e){const t=this.decodeMessage(e,d.StreamUpdate);t&&0!==Object.keys(this.streams).length&&t.results.forEach((e=>{if(e.result.error)return;const t=this.streams[e.id.toString()];if(!t)return void console.error("Received invalid stream id",e.id);const r=t.decode(e.result.value);t.callbacks.forEach((e=>{try{e(r)}catch(e){console.error(e)}}))}))}async send(e){return await this.sendRequest(e)}sendRequest(e){if(!e)throw new Error("The calls argument must be provided when calling sendRequest");if("object"!=typeof e)throw new Error("The calls argument must either be an object or an array of objects when calling sendRequest");e instanceof Array||(e=[e]);const t=[];e.forEach((e=>{if(void 0===e.call)throw new Error("Each call added must have both a call and decode property, missing call");if(void 0===e.decode)throw new Error("Each call added must have both a call and decode property, missing decode");this.decodeStack.splice(0,0,e.decode),t.push(e.call)}));const r=d.Request.create({calls:t}),s=d.Request.encode(r).finish(),i={resolve:()=>console.error("Callbacks not ready!"),reject:()=>console.error("Callbacks not ready!")};return this.callbackStack.splice(0,0,i),this.rpcSocket.send(s),new Promise(((e,t)=>{i.resolve=e,i.reject=t}))}async addStream(e,t,r){if(e instanceof Array)throw new Error("You can only pass one procedure call to `client.addStream` at a time.");if(!e.call)throw new Error("Procedure must have a call property on it.");const s=await this.services.krpc.addStream(e.call);for(;this.streams[s.id.toString()]&&this.streams[s.id.toString()].invalid;)await this.removeStream(this.streams[s.id.toString()]),s=await this.services.krpc.addStream(e.call);if(s.error)throw s.error;return this.registerStream(e,s,t,r)}registerStream(e,t,r,s){let i=this.streams[t.id.toString()];i&&!i.invalid||(i={callbacks:[],removeCallbacks:[],decode:e.decode,id:t.id,remove:()=>this.removeStream(i),setRate:e=>this.setStreamRate(i,e)},0!==this.options.streamRate&&i.setRate(this.options.streamRate)),r&&(this.send(e).then((e=>e.results[0].value)).then(r),i.callbacks.push(r)),s&&i.removeCallbacks.push(s),this.streams[t.id.toString()]=i;const a={call:e.call,stream:i,handler:r,remove:()=>{a.invalid=!0,a.stream.callbacks=a.stream.callbacks.filter((e=>e!==a.handler)),a.stream.callbacks.length||a.stream.remove()}};return a}async addEvent(e){let t=this.streams[e.id.toString()];t&&!t.invalid||(t={callbacks:[],removeCallbacks:[],decode:()=>{},id:e.id,remove:()=>this.removeStream(t),setRate:e=>this.setStreamRate(t,e)},0!==this.options.streamRate&&t.setRate(this.options.streamRate));const r=[],s=()=>{for(const e of r)try{e()}catch(e){console.error(e)}};t.callbacks.push(s),this.streams[e.id.toString()]=t;const i={started:!1,stream:t,handlers:r,listen:async t=>("function"==typeof t&&i.handlers.push(t),this.services.krpc.startStream(e.id).then((()=>{i.started=!0}))),remove:()=>{i.invalid=!0,i.stream.callbacks=i.stream.callbacks.filter((e=>e!==s)),i.stream.callbacks.length||i.stream.remove()}};return i}async setStreamRate(e,t){const r=L(e.id,t),s=await this.send(r);if(s.error)throw new Error(s.error);const i=s.results[0];if(i.error)throw new Error(i.error)}async removeStream(e){e.invalid=!0,e.callbacks=[],e.removeCallbacks.forEach((e=>{try{e()}catch(e){console.error(e)}})),e.removeCallbacks=[];const t=M(e.id),r=await this.send(t);if(r.error)throw new Error(r.error);const s=r.results[0];if(s.error)throw new Error(s.error)}};
//# sourceMappingURL=KRPC.js.map
